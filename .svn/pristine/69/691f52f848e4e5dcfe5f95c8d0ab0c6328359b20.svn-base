using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using Advarics.ControlServiceClient;
using System.Collections.ObjectModel;
using IdeaBlade.EntityModel;
using IdeaBlade.Core;
using Advarics.ControlServiceClient.AdvaricsControlService;
using Advarics.ControlServiceClient.ServiceHandler;
using Advarics.ControlServiceClient.DataContract;
using System.ServiceModel;
using Advarics.ControlService.Logging;

namespace Advarics.ControlService.ServiceHandler
{
    public class GetFileName
    {
        public List<ServerPathDto> GetPath(Customer item)
        {
            List<ServerPathDto> serverPaths = new List<ServerPathDto>();
            string uploadPath = item.Server.ServerSettings.Where(x => x.ServerId == item.Server.Id).Select(x => x.UploadStoragePath).FirstOrDefault();
            string backupPath = item.Server.ServerSettings.Where(x => x.ServerId == item.Server.Id).Select(x => x.BackupStoragePath).FirstOrDefault();

            // start service client
            AdvaricsControlServiceClient client = new AdvaricsControlServiceClient();

            //Je Server abfragen
            ServiceProxyProvider serviceProxyProvider = new ServiceProxyProvider();
            DnsEndpointIdentity endpointIdentity = new DnsEndpointIdentity("advarics.net");
            var uri = new Uri(item.Server.ServerSettings.Where(x => x.ServerId == item.Server.Id).Select(x => x.Url).FirstOrDefault());
            var endpointAddress = new EndpointAddress(uri, endpointIdentity);
            client = serviceProxyProvider.GetProxyServer1(endpointAddress);

            var paths = client.GetFilePaths(new BasePathRequest() { CustomerBaseFilePath = item.DBName, BaseFilePath = uploadPath, IdToken = SecurityIdProvider.GetIDToken() });
            foreach (var itemPath in paths.FileInfos)
            {
                ServerPathDto serverpathItem = new ServerPathDto()
                {
                    BackupPath = backupPath,
                    pathFileInfo = itemPath,
                    Url = item.Server.ServerSettings.Where(x => x.ServerId == item.Server.Id).Select(x => x.Url).FirstOrDefault(),
                    ServerId = item.Id
                };
                serverPaths.Add(serverpathItem);
            }
            return serverPaths;
        }
    }
}