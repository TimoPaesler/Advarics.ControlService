// ------------------------------------------------------------------------------
// DO NOT MODIFY THIS CLASS - AutoGenerated Code
//    Any changes made to this code will be lost the next time this 
//    code is regenerated.
// 
//    Generated at: 11.01.2013 12:01:26
//    DevForce version: 7.0.3.0
//    Template version: 2.1.4
// ------------------------------------------------------------------------------
using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using IbEm   = IdeaBlade.EntityModel;
using IbCore = IdeaBlade.Core;
using IbVal  = IdeaBlade.Validation;

[module: IbCore.IdeaBladeLicense("2Eet+/zA6ZSNZSjfJVIPwh2uRw45n/qAFTUpWsXbtUxVi2I7OhensIusfk2TERQt")]

namespace Advarics.ControlService { 

  #region RetailEntities

  /// <summary>
  /// The domain-specific EntityManager for your domain model.
  /// </summary>
  public partial class RetailEntities : IbEm.EntityManager {

    #region Constructors

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(bool, string, IbEm.EntityServiceOption, string)"/>. </summary>
    public RetailEntities(bool shouldConnect=true, string dataSourceExtension=null, IbEm.EntityServiceOption entityServiceOption=IbEm.EntityServiceOption.UseDefaultService, string compositionContextName=null) : base(shouldConnect, dataSourceExtension, entityServiceOption, compositionContextName) {}

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(IbEm.EntityManagerContext)"/>. </summary>
    public RetailEntities(IbEm.EntityManagerContext entityManagerContext) : base(entityManagerContext) {}

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(IbEm.EntityManager, bool, string, IbEm.EntityServiceOption, string)"/>. </summary>
    public RetailEntities(IbEm.EntityManager entityManager, bool shouldConnect, string dataSourceExtension=null, IbEm.EntityServiceOption entityServiceOption=IbEm.EntityServiceOption.UseDefaultService, string compositionContextName=null) : base(entityManager, shouldConnect, dataSourceExtension, entityServiceOption, compositionContextName) {}

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(IbEm.EntityManager, IbEm.EntityManagerContext)"/>. </summary>
    public RetailEntities(IbEm.EntityManager entityManager, IbEm.EntityManagerContext entityManagerContext=null) : base(entityManager, entityManagerContext) {}

    static RetailEntities() {
      IbEm.EntityRelation.InitializeEntityRelations(IdeaBlade.Core.Reflection.ReflectionExtensions.GetAssembly(typeof(RetailEntities)));
    }
    #endregion Constructors

    #region EntityQueries

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<CashPoint> CashPoints {
      get { return new IbEm.EntityQuery<CashPoint>("CashPoints", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<UpdateStatu> UpdateStatus {
      get { return new IbEm.EntityQuery<UpdateStatu>("UpdateStatus", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<Store> Stores {
      get { return new IbEm.EntityQuery<Store>("Stores", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<DbVersion> DbVersions {
      get { return new IbEm.EntityQuery<DbVersion>("DbVersions", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<LogCommon> LogCommons {
      get { return new IbEm.EntityQuery<LogCommon>("LogCommons", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<BackgroundWorkerStatu> BackgroundWorkerStatus {
      get { return new IbEm.EntityQuery<BackgroundWorkerStatu>("BackgroundWorkerStatus", this); }
    }
    #endregion EntityQueries
  }
  #endregion RetailEntities

  #region CashPoint class

  /// <summary>The auto-generated CashPoint class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"RetailEntities")]
  [IbEm.DefaultEntitySetName(@"RetailEntities.CashPoints")]
  public partial class CashPoint : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<CashPoint, object>> expr) {
      return IbCore.PropertyPath.For<CashPoint>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_Id")]
    public long Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the No. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="No", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_No")]
    public long No {
      get { return PropertyMetadata.No.GetValue(this); }
      set { PropertyMetadata.No.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StoreId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="StoreId", AutoGenerateField=false)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_StoreId")]
    public long StoreId {
      get { return PropertyMetadata.StoreId.GetValue(this); }
      set { PropertyMetadata.StoreId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Name", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="CashPoint_Name")]
    public string Name {
      get { return PropertyMetadata.Name.GetValue(this); }
      set { PropertyMetadata.Name.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DoSynchronize. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DoSynchronize", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_DoSynchronize")]
    public bool DoSynchronize {
      get { return PropertyMetadata.DoSynchronize.GetValue(this); }
      set { PropertyMetadata.DoSynchronize.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MacAddress. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MacAddress", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=20, IsRequired=true, ErrorMessageResourceName="CashPoint_MacAddress")]
    public string MacAddress {
      get { return PropertyMetadata.MacAddress.GetValue(this); }
      set { PropertyMetadata.MacAddress.SetValue(this, value); }
    }

    /// <summary>Gets or sets the SyncName. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="SyncName", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="CashPoint_SyncName")]
    public string SyncName {
      get { return PropertyMetadata.SyncName.GetValue(this); }
      set { PropertyMetadata.SyncName.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CashConfigId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CashConfigId", AutoGenerateField=true)]
    public System.Nullable<long> CashConfigId {
      get { return PropertyMetadata.CashConfigId.GetValue(this); }
      set { PropertyMetadata.CashConfigId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the LastSync. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="LastSync", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_LastSync")]
    public System.DateTime LastSync {
      get { return PropertyMetadata.LastSync.GetValue(this); }
      set { PropertyMetadata.LastSync.SetValue(this, value); }
    }

    /// <summary>Gets or sets the UpdatePackageCashPoint. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="UpdatePackageCashPoint", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_UpdatePackageCashPoint")]
    public long UpdatePackageCashPoint {
      get { return PropertyMetadata.UpdatePackageCashPoint.GetValue(this); }
      set { PropertyMetadata.UpdatePackageCashPoint.SetValue(this, value); }
    }

    /// <summary>Gets or sets the UpdatePackageSyncService. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="UpdatePackageSyncService", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_UpdatePackageSyncService")]
    public long UpdatePackageSyncService {
      get { return PropertyMetadata.UpdatePackageSyncService.GetValue(this); }
      set { PropertyMetadata.UpdatePackageSyncService.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ItemSyncTimeStamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ItemSyncTimeStamp", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_ItemSyncTimeStamp")]
    public System.DateTime ItemSyncTimeStamp {
      get { return PropertyMetadata.ItemSyncTimeStamp.GetValue(this); }
      set { PropertyMetadata.ItemSyncTimeStamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ItemSyncMaxId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ItemSyncMaxId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_ItemSyncMaxId")]
    public long ItemSyncMaxId {
      get { return PropertyMetadata.ItemSyncMaxId.GetValue(this); }
      set { PropertyMetadata.ItemSyncMaxId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CustomerSyncTimeStamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CustomerSyncTimeStamp", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_CustomerSyncTimeStamp")]
    public System.DateTime CustomerSyncTimeStamp {
      get { return PropertyMetadata.CustomerSyncTimeStamp.GetValue(this); }
      set { PropertyMetadata.CustomerSyncTimeStamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CustomerSyncMaxId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CustomerSyncMaxId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_CustomerSyncMaxId")]
    public long CustomerSyncMaxId {
      get { return PropertyMetadata.CustomerSyncMaxId.GetValue(this); }
      set { PropertyMetadata.CustomerSyncMaxId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the VoucherSyncTimeStamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="VoucherSyncTimeStamp", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_VoucherSyncTimeStamp")]
    public System.DateTime VoucherSyncTimeStamp {
      get { return PropertyMetadata.VoucherSyncTimeStamp.GetValue(this); }
      set { PropertyMetadata.VoucherSyncTimeStamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the VoucherSyncMaxId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="VoucherSyncMaxId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_VoucherSyncMaxId")]
    public long VoucherSyncMaxId {
      get { return PropertyMetadata.VoucherSyncMaxId.GetValue(this); }
      set { PropertyMetadata.VoucherSyncMaxId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CustomerSalesSyncTimeStamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CustomerSalesSyncTimeStamp", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_CustomerSalesSyncTimeStamp")]
    public System.DateTime CustomerSalesSyncTimeStamp {
      get { return PropertyMetadata.CustomerSalesSyncTimeStamp.GetValue(this); }
      set { PropertyMetadata.CustomerSalesSyncTimeStamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CustomerSalesSyncMaxId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CustomerSalesSyncMaxId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_CustomerSalesSyncMaxId")]
    public long CustomerSalesSyncMaxId {
      get { return PropertyMetadata.CustomerSalesSyncMaxId.GetValue(this); }
      set { PropertyMetadata.CustomerSalesSyncMaxId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the SalesOnApprovalSyncTimeStamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="SalesOnApprovalSyncTimeStamp", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_SalesOnApprovalSyncTimeStamp")]
    public System.DateTime SalesOnApprovalSyncTimeStamp {
      get { return PropertyMetadata.SalesOnApprovalSyncTimeStamp.GetValue(this); }
      set { PropertyMetadata.SalesOnApprovalSyncTimeStamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the SalesOnApprovalSyncMaxId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="SalesOnApprovalSyncMaxId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_SalesOnApprovalSyncMaxId")]
    public long SalesOnApprovalSyncMaxId {
      get { return PropertyMetadata.SalesOnApprovalSyncMaxId.GetValue(this); }
      set { PropertyMetadata.SalesOnApprovalSyncMaxId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StartNoBilling. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StartNoBilling", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_StartNoBilling")]
    public long StartNoBilling {
      get { return PropertyMetadata.StartNoBilling.GetValue(this); }
      set { PropertyMetadata.StartNoBilling.SetValue(this, value); }
    }

    /// <summary>Gets or sets the EndNoBilling. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="EndNoBilling", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_EndNoBilling")]
    public long EndNoBilling {
      get { return PropertyMetadata.EndNoBilling.GetValue(this); }
      set { PropertyMetadata.EndNoBilling.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StartNoCustomer. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StartNoCustomer", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_StartNoCustomer")]
    public long StartNoCustomer {
      get { return PropertyMetadata.StartNoCustomer.GetValue(this); }
      set { PropertyMetadata.StartNoCustomer.SetValue(this, value); }
    }

    /// <summary>Gets or sets the EndNoCustomer. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="EndNoCustomer", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_EndNoCustomer")]
    public long EndNoCustomer {
      get { return PropertyMetadata.EndNoCustomer.GetValue(this); }
      set { PropertyMetadata.EndNoCustomer.SetValue(this, value); }
    }

    /// <summary>Gets or sets the VoucherDeletedSyncTimeStamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="VoucherDeletedSyncTimeStamp", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_VoucherDeletedSyncTimeStamp")]
    public System.DateTime VoucherDeletedSyncTimeStamp {
      get { return PropertyMetadata.VoucherDeletedSyncTimeStamp.GetValue(this); }
      set { PropertyMetadata.VoucherDeletedSyncTimeStamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the VoucherDeletedSyncMaxId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="VoucherDeletedSyncMaxId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_VoucherDeletedSyncMaxId")]
    public long VoucherDeletedSyncMaxId {
      get { return PropertyMetadata.VoucherDeletedSyncMaxId.GetValue(this); }
      set { PropertyMetadata.VoucherDeletedSyncMaxId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BillingSyncTimeStamp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BillingSyncTimeStamp", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_BillingSyncTimeStamp")]
    public System.DateTime BillingSyncTimeStamp {
      get { return PropertyMetadata.BillingSyncTimeStamp.GetValue(this); }
      set { PropertyMetadata.BillingSyncTimeStamp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BillingSyncMaxId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BillingSyncMaxId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_BillingSyncMaxId")]
    public long BillingSyncMaxId {
      get { return PropertyMetadata.BillingSyncMaxId.GetValue(this); }
      set { PropertyMetadata.BillingSyncMaxId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Password1. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Password1", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="CashPoint_Password1")]
    public string Password1 {
      get { return PropertyMetadata.Password1.GetValue(this); }
      set { PropertyMetadata.Password1.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Password2. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Password2", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="CashPoint_Password2")]
    public string Password2 {
      get { return PropertyMetadata.Password2.GetValue(this); }
      set { PropertyMetadata.Password2.SetValue(this, value); }
    }

    /// <summary>Gets or sets the SlowSpeedSync. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="SlowSpeedSync", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="CashPoint_SlowSpeedSync")]
    public bool SlowSpeedSync {
      get { return PropertyMetadata.SlowSpeedSync.GetValue(this); }
      set { PropertyMetadata.SlowSpeedSync.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the Store. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Store", AutoGenerateField=false)]
    public Store Store {
      get { return PropertyMetadata.Store.GetValue(this); }
      set { PropertyMetadata.Store.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> Id = new IbEm.DataEntityProperty<CashPoint, long>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The No <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> No = new IbEm.DataEntityProperty<CashPoint, long>("No", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StoreId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> StoreId = new IbEm.DataEntityProperty<CashPoint, long>("StoreId", false, false, IbEm.ConcurrencyStrategy.None, false, "Store");

      /// <summary>The Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, string> Name = new IbEm.DataEntityProperty<CashPoint, string>("Name", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DoSynchronize <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, bool> DoSynchronize = new IbEm.DataEntityProperty<CashPoint, bool>("DoSynchronize", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MacAddress <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, string> MacAddress = new IbEm.DataEntityProperty<CashPoint, string>("MacAddress", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The SyncName <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, string> SyncName = new IbEm.DataEntityProperty<CashPoint, string>("SyncName", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CashConfigId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, System.Nullable<long>> CashConfigId = new IbEm.DataEntityProperty<CashPoint, System.Nullable<long>>("CashConfigId", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The LastSync <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, System.DateTime> LastSync = new IbEm.DataEntityProperty<CashPoint, System.DateTime>("LastSync", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The UpdatePackageCashPoint <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> UpdatePackageCashPoint = new IbEm.DataEntityProperty<CashPoint, long>("UpdatePackageCashPoint", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The UpdatePackageSyncService <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> UpdatePackageSyncService = new IbEm.DataEntityProperty<CashPoint, long>("UpdatePackageSyncService", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ItemSyncTimeStamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, System.DateTime> ItemSyncTimeStamp = new IbEm.DataEntityProperty<CashPoint, System.DateTime>("ItemSyncTimeStamp", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ItemSyncMaxId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> ItemSyncMaxId = new IbEm.DataEntityProperty<CashPoint, long>("ItemSyncMaxId", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CustomerSyncTimeStamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, System.DateTime> CustomerSyncTimeStamp = new IbEm.DataEntityProperty<CashPoint, System.DateTime>("CustomerSyncTimeStamp", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CustomerSyncMaxId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> CustomerSyncMaxId = new IbEm.DataEntityProperty<CashPoint, long>("CustomerSyncMaxId", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The VoucherSyncTimeStamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, System.DateTime> VoucherSyncTimeStamp = new IbEm.DataEntityProperty<CashPoint, System.DateTime>("VoucherSyncTimeStamp", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The VoucherSyncMaxId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> VoucherSyncMaxId = new IbEm.DataEntityProperty<CashPoint, long>("VoucherSyncMaxId", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CustomerSalesSyncTimeStamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, System.DateTime> CustomerSalesSyncTimeStamp = new IbEm.DataEntityProperty<CashPoint, System.DateTime>("CustomerSalesSyncTimeStamp", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CustomerSalesSyncMaxId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> CustomerSalesSyncMaxId = new IbEm.DataEntityProperty<CashPoint, long>("CustomerSalesSyncMaxId", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The SalesOnApprovalSyncTimeStamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, System.DateTime> SalesOnApprovalSyncTimeStamp = new IbEm.DataEntityProperty<CashPoint, System.DateTime>("SalesOnApprovalSyncTimeStamp", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The SalesOnApprovalSyncMaxId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> SalesOnApprovalSyncMaxId = new IbEm.DataEntityProperty<CashPoint, long>("SalesOnApprovalSyncMaxId", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StartNoBilling <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> StartNoBilling = new IbEm.DataEntityProperty<CashPoint, long>("StartNoBilling", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The EndNoBilling <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> EndNoBilling = new IbEm.DataEntityProperty<CashPoint, long>("EndNoBilling", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StartNoCustomer <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> StartNoCustomer = new IbEm.DataEntityProperty<CashPoint, long>("StartNoCustomer", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The EndNoCustomer <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> EndNoCustomer = new IbEm.DataEntityProperty<CashPoint, long>("EndNoCustomer", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The VoucherDeletedSyncTimeStamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, System.DateTime> VoucherDeletedSyncTimeStamp = new IbEm.DataEntityProperty<CashPoint, System.DateTime>("VoucherDeletedSyncTimeStamp", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The VoucherDeletedSyncMaxId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> VoucherDeletedSyncMaxId = new IbEm.DataEntityProperty<CashPoint, long>("VoucherDeletedSyncMaxId", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BillingSyncTimeStamp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, System.DateTime> BillingSyncTimeStamp = new IbEm.DataEntityProperty<CashPoint, System.DateTime>("BillingSyncTimeStamp", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BillingSyncMaxId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, long> BillingSyncMaxId = new IbEm.DataEntityProperty<CashPoint, long>("BillingSyncMaxId", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Password1 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, string> Password1 = new IbEm.DataEntityProperty<CashPoint, string>("Password1", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Password2 <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, string> Password2 = new IbEm.DataEntityProperty<CashPoint, string>("Password2", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The SlowSpeedSync <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CashPoint, bool> SlowSpeedSync = new IbEm.DataEntityProperty<CashPoint, bool>("SlowSpeedSync", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Store <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<CashPoint, Store> Store = new IbEm.NavigationScalarEntityProperty<CashPoint, Store>("Store", true, "FK_CashPoint_Store", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String No = "No";
      public const String StoreId = "StoreId";
      public const String Name = "Name";
      public const String DoSynchronize = "DoSynchronize";
      public const String MacAddress = "MacAddress";
      public const String SyncName = "SyncName";
      public const String CashConfigId = "CashConfigId";
      public const String LastSync = "LastSync";
      public const String UpdatePackageCashPoint = "UpdatePackageCashPoint";
      public const String UpdatePackageSyncService = "UpdatePackageSyncService";
      public const String ItemSyncTimeStamp = "ItemSyncTimeStamp";
      public const String ItemSyncMaxId = "ItemSyncMaxId";
      public const String CustomerSyncTimeStamp = "CustomerSyncTimeStamp";
      public const String CustomerSyncMaxId = "CustomerSyncMaxId";
      public const String VoucherSyncTimeStamp = "VoucherSyncTimeStamp";
      public const String VoucherSyncMaxId = "VoucherSyncMaxId";
      public const String CustomerSalesSyncTimeStamp = "CustomerSalesSyncTimeStamp";
      public const String CustomerSalesSyncMaxId = "CustomerSalesSyncMaxId";
      public const String SalesOnApprovalSyncTimeStamp = "SalesOnApprovalSyncTimeStamp";
      public const String SalesOnApprovalSyncMaxId = "SalesOnApprovalSyncMaxId";
      public const String StartNoBilling = "StartNoBilling";
      public const String EndNoBilling = "EndNoBilling";
      public const String StartNoCustomer = "StartNoCustomer";
      public const String EndNoCustomer = "EndNoCustomer";
      public const String VoucherDeletedSyncTimeStamp = "VoucherDeletedSyncTimeStamp";
      public const String VoucherDeletedSyncMaxId = "VoucherDeletedSyncMaxId";
      public const String BillingSyncTimeStamp = "BillingSyncTimeStamp";
      public const String BillingSyncMaxId = "BillingSyncMaxId";
      public const String Password1 = "Password1";
      public const String Password2 = "Password2";
      public const String SlowSpeedSync = "SlowSpeedSync";
      public const String Store = "Store";
    }
    #endregion EntityPropertyNames
  }
  #endregion CashPoint class

  #region UpdateStatu class

  /// <summary>The auto-generated UpdateStatu class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"RetailEntities")]
  [IbEm.DefaultEntitySetName(@"RetailEntities.UpdateStatus")]
  public partial class UpdateStatu : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<UpdateStatu, object>> expr) {
      return IbCore.PropertyPath.For<UpdateStatu>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="UpdateStatu_Id")]
    public long Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CurrentProgramVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CurrentProgramVersion", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="UpdateStatu_CurrentProgramVersion")]
    public string CurrentProgramVersion {
      get { return PropertyMetadata.CurrentProgramVersion.GetValue(this); }
      set { PropertyMetadata.CurrentProgramVersion.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CurrentUpdatePackage. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CurrentUpdatePackage", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="UpdateStatu_CurrentUpdatePackage")]
    public long CurrentUpdatePackage {
      get { return PropertyMetadata.CurrentUpdatePackage.GetValue(this); }
      set { PropertyMetadata.CurrentUpdatePackage.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<UpdateStatu, long> Id = new IbEm.DataEntityProperty<UpdateStatu, long>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The CurrentProgramVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<UpdateStatu, string> CurrentProgramVersion = new IbEm.DataEntityProperty<UpdateStatu, string>("CurrentProgramVersion", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CurrentUpdatePackage <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<UpdateStatu, long> CurrentUpdatePackage = new IbEm.DataEntityProperty<UpdateStatu, long>("CurrentUpdatePackage", false, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String CurrentProgramVersion = "CurrentProgramVersion";
      public const String CurrentUpdatePackage = "CurrentUpdatePackage";
    }
    #endregion EntityPropertyNames
  }
  #endregion UpdateStatu class

  #region Store class

  /// <summary>The auto-generated Store class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"RetailEntities")]
  [IbEm.DefaultEntitySetName(@"RetailEntities.Stores")]
  public partial class Store : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<Store, object>> expr) {
      return IbCore.PropertyPath.For<Store>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_Id")]
    public long Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the No. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="No", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_No")]
    public int No {
      get { return PropertyMetadata.No.GetValue(this); }
      set { PropertyMetadata.No.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Name", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=250, IsRequired=true, ErrorMessageResourceName="Store_Name")]
    public string Name {
      get { return PropertyMetadata.Name.GetValue(this); }
      set { PropertyMetadata.Name.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MainGln. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MainGln", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Store_MainGln")]
    public string MainGln {
      get { return PropertyMetadata.MainGln.GetValue(this); }
      set { PropertyMetadata.MainGln.SetValue(this, value); }
    }

    /// <summary>Gets or sets the NosEnabled. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="NosEnabled", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_NosEnabled")]
    public bool NosEnabled {
      get { return PropertyMetadata.NosEnabled.GetValue(this); }
      set { PropertyMetadata.NosEnabled.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StartNoOrder. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StartNoOrder", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_StartNoOrder")]
    public long StartNoOrder {
      get { return PropertyMetadata.StartNoOrder.GetValue(this); }
      set { PropertyMetadata.StartNoOrder.SetValue(this, value); }
    }

    /// <summary>Gets or sets the EndNoOrder. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="EndNoOrder", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_EndNoOrder")]
    public long EndNoOrder {
      get { return PropertyMetadata.EndNoOrder.GetValue(this); }
      set { PropertyMetadata.EndNoOrder.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AssociationClientId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AssociationClientId", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Store_AssociationClientId")]
    public string AssociationClientId {
      get { return PropertyMetadata.AssociationClientId.GetValue(this); }
      set { PropertyMetadata.AssociationClientId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ShortName. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ShortName", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Store_ShortName")]
    public string ShortName {
      get { return PropertyMetadata.ShortName.GetValue(this); }
      set { PropertyMetadata.ShortName.SetValue(this, value); }
    }

    /// <summary>Gets or sets the VatSetId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="VatSetId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_VatSetId")]
    public long VatSetId {
      get { return PropertyMetadata.VatSetId.GetValue(this); }
      set { PropertyMetadata.VatSetId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the AddressId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="AddressId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_AddressId")]
    public long AddressId {
      get { return PropertyMetadata.AddressId.GetValue(this); }
      set { PropertyMetadata.AddressId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StoreGroupId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StoreGroupId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_StoreGroupId")]
    public long StoreGroupId {
      get { return PropertyMetadata.StoreGroupId.GetValue(this); }
      set { PropertyMetadata.StoreGroupId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CurrencyId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CurrencyId", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_CurrencyId")]
    public long CurrencyId {
      get { return PropertyMetadata.CurrencyId.GetValue(this); }
      set { PropertyMetadata.CurrencyId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StoreVatNo. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StoreVatNo", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Store_StoreVatNo")]
    public string StoreVatNo {
      get { return PropertyMetadata.StoreVatNo.GetValue(this); }
      set { PropertyMetadata.StoreVatNo.SetValue(this, value); }
    }

    /// <summary>Gets or sets the LogoPath. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="LogoPath", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=500, IsRequired=false, ErrorMessageResourceName="Store_LogoPath")]
    public string LogoPath {
      get { return PropertyMetadata.LogoPath.GetValue(this); }
      set { PropertyMetadata.LogoPath.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ChangedAt. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ChangedAt", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_ChangedAt")]
    public System.DateTime ChangedAt {
      get { return PropertyMetadata.ChangedAt.GetValue(this); }
      set { PropertyMetadata.ChangedAt.SetValue(this, value); }
    }

    /// <summary>Gets or sets the InvoiceAddressId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="InvoiceAddressId", AutoGenerateField=true)]
    public System.Nullable<long> InvoiceAddressId {
      get { return PropertyMetadata.InvoiceAddressId.GetValue(this); }
      set { PropertyMetadata.InvoiceAddressId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StartNoBilling. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StartNoBilling", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_StartNoBilling")]
    public long StartNoBilling {
      get { return PropertyMetadata.StartNoBilling.GetValue(this); }
      set { PropertyMetadata.StartNoBilling.SetValue(this, value); }
    }

    /// <summary>Gets or sets the EndNoBilling. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="EndNoBilling", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_EndNoBilling")]
    public long EndNoBilling {
      get { return PropertyMetadata.EndNoBilling.GetValue(this); }
      set { PropertyMetadata.EndNoBilling.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StartNoCreditNote. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StartNoCreditNote", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_StartNoCreditNote")]
    public long StartNoCreditNote {
      get { return PropertyMetadata.StartNoCreditNote.GetValue(this); }
      set { PropertyMetadata.StartNoCreditNote.SetValue(this, value); }
    }

    /// <summary>Gets or sets the EndNoCreditNote. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="EndNoCreditNote", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_EndNoCreditNote")]
    public long EndNoCreditNote {
      get { return PropertyMetadata.EndNoCreditNote.GetValue(this); }
      set { PropertyMetadata.EndNoCreditNote.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ReceiptFooter. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ReceiptFooter", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_ReceiptFooter")]
    public string ReceiptFooter {
      get { return PropertyMetadata.ReceiptFooter.GetValue(this); }
      set { PropertyMetadata.ReceiptFooter.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StartNoBillingOffer. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StartNoBillingOffer", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_StartNoBillingOffer")]
    public long StartNoBillingOffer {
      get { return PropertyMetadata.StartNoBillingOffer.GetValue(this); }
      set { PropertyMetadata.StartNoBillingOffer.SetValue(this, value); }
    }

    /// <summary>Gets or sets the EndNoBillingOffer. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="EndNoBillingOffer", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_EndNoBillingOffer")]
    public long EndNoBillingOffer {
      get { return PropertyMetadata.EndNoBillingOffer.GetValue(this); }
      set { PropertyMetadata.EndNoBillingOffer.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StartNoBillingOrder. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StartNoBillingOrder", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_StartNoBillingOrder")]
    public long StartNoBillingOrder {
      get { return PropertyMetadata.StartNoBillingOrder.GetValue(this); }
      set { PropertyMetadata.StartNoBillingOrder.SetValue(this, value); }
    }

    /// <summary>Gets or sets the EndNoBillingOrder. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="EndNoBillingOrder", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_EndNoBillingOrder")]
    public long EndNoBillingOrder {
      get { return PropertyMetadata.EndNoBillingOrder.GetValue(this); }
      set { PropertyMetadata.EndNoBillingOrder.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DeliveryAddressId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DeliveryAddressId", AutoGenerateField=true)]
    public System.Nullable<long> DeliveryAddressId {
      get { return PropertyMetadata.DeliveryAddressId.GetValue(this); }
      set { PropertyMetadata.DeliveryAddressId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MainFon. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MainFon", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Store_MainFon")]
    public string MainFon {
      get { return PropertyMetadata.MainFon.GetValue(this); }
      set { PropertyMetadata.MainFon.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MainFax. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MainFax", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Store_MainFax")]
    public string MainFax {
      get { return PropertyMetadata.MainFax.GetValue(this); }
      set { PropertyMetadata.MainFax.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Email. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Email", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=100, IsRequired=true, ErrorMessageResourceName="Store_Email")]
    public string Email {
      get { return PropertyMetadata.Email.GetValue(this); }
      set { PropertyMetadata.Email.SetValue(this, value); }
    }

    /// <summary>Gets or sets the WebSite. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="WebSite", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=150, IsRequired=true, ErrorMessageResourceName="Store_WebSite")]
    public string WebSite {
      get { return PropertyMetadata.WebSite.GetValue(this); }
      set { PropertyMetadata.WebSite.SetValue(this, value); }
    }

    /// <summary>Gets or sets the MobileFon. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="MobileFon", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="Store_MobileFon")]
    public string MobileFon {
      get { return PropertyMetadata.MobileFon.GetValue(this); }
      set { PropertyMetadata.MobileFon.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ReceiptFooterPicturePath. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ReceiptFooterPicturePath", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=500, IsRequired=true, ErrorMessageResourceName="Store_ReceiptFooterPicturePath")]
    public string ReceiptFooterPicturePath {
      get { return PropertyMetadata.ReceiptFooterPicturePath.GetValue(this); }
      set { PropertyMetadata.ReceiptFooterPicturePath.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ReceiptFooterAsText. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ReceiptFooterAsText", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="Store_ReceiptFooterAsText")]
    public bool ReceiptFooterAsText {
      get { return PropertyMetadata.ReceiptFooterAsText.GetValue(this); }
      set { PropertyMetadata.ReceiptFooterAsText.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets the CashPoints. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="CashPoints", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<CashPoint> CashPoints {
      get { return PropertyMetadata.CashPoints.GetValue(this); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, long> Id = new IbEm.DataEntityProperty<Store, long>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The No <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, int> No = new IbEm.DataEntityProperty<Store, int>("No", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, string> Name = new IbEm.DataEntityProperty<Store, string>("Name", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MainGln <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, string> MainGln = new IbEm.DataEntityProperty<Store, string>("MainGln", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The NosEnabled <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, bool> NosEnabled = new IbEm.DataEntityProperty<Store, bool>("NosEnabled", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StartNoOrder <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, long> StartNoOrder = new IbEm.DataEntityProperty<Store, long>("StartNoOrder", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The EndNoOrder <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, long> EndNoOrder = new IbEm.DataEntityProperty<Store, long>("EndNoOrder", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AssociationClientId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, string> AssociationClientId = new IbEm.DataEntityProperty<Store, string>("AssociationClientId", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ShortName <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, string> ShortName = new IbEm.DataEntityProperty<Store, string>("ShortName", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The VatSetId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, long> VatSetId = new IbEm.DataEntityProperty<Store, long>("VatSetId", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The AddressId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, long> AddressId = new IbEm.DataEntityProperty<Store, long>("AddressId", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StoreGroupId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, long> StoreGroupId = new IbEm.DataEntityProperty<Store, long>("StoreGroupId", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CurrencyId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, long> CurrencyId = new IbEm.DataEntityProperty<Store, long>("CurrencyId", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StoreVatNo <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, string> StoreVatNo = new IbEm.DataEntityProperty<Store, string>("StoreVatNo", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The LogoPath <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, string> LogoPath = new IbEm.DataEntityProperty<Store, string>("LogoPath", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ChangedAt <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, System.DateTime> ChangedAt = new IbEm.DataEntityProperty<Store, System.DateTime>("ChangedAt", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The InvoiceAddressId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, System.Nullable<long>> InvoiceAddressId = new IbEm.DataEntityProperty<Store, System.Nullable<long>>("InvoiceAddressId", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StartNoBilling <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, long> StartNoBilling = new IbEm.DataEntityProperty<Store, long>("StartNoBilling", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The EndNoBilling <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, long> EndNoBilling = new IbEm.DataEntityProperty<Store, long>("EndNoBilling", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StartNoCreditNote <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, long> StartNoCreditNote = new IbEm.DataEntityProperty<Store, long>("StartNoCreditNote", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The EndNoCreditNote <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, long> EndNoCreditNote = new IbEm.DataEntityProperty<Store, long>("EndNoCreditNote", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ReceiptFooter <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, string> ReceiptFooter = new IbEm.DataEntityProperty<Store, string>("ReceiptFooter", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StartNoBillingOffer <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, long> StartNoBillingOffer = new IbEm.DataEntityProperty<Store, long>("StartNoBillingOffer", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The EndNoBillingOffer <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, long> EndNoBillingOffer = new IbEm.DataEntityProperty<Store, long>("EndNoBillingOffer", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StartNoBillingOrder <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, long> StartNoBillingOrder = new IbEm.DataEntityProperty<Store, long>("StartNoBillingOrder", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The EndNoBillingOrder <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, long> EndNoBillingOrder = new IbEm.DataEntityProperty<Store, long>("EndNoBillingOrder", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DeliveryAddressId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, System.Nullable<long>> DeliveryAddressId = new IbEm.DataEntityProperty<Store, System.Nullable<long>>("DeliveryAddressId", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MainFon <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, string> MainFon = new IbEm.DataEntityProperty<Store, string>("MainFon", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MainFax <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, string> MainFax = new IbEm.DataEntityProperty<Store, string>("MainFax", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Email <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, string> Email = new IbEm.DataEntityProperty<Store, string>("Email", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The WebSite <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, string> WebSite = new IbEm.DataEntityProperty<Store, string>("WebSite", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The MobileFon <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, string> MobileFon = new IbEm.DataEntityProperty<Store, string>("MobileFon", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ReceiptFooterPicturePath <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, string> ReceiptFooterPicturePath = new IbEm.DataEntityProperty<Store, string>("ReceiptFooterPicturePath", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ReceiptFooterAsText <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Store, bool> ReceiptFooterAsText = new IbEm.DataEntityProperty<Store, bool>("ReceiptFooterAsText", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CashPoints <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Store, CashPoint> CashPoints = new IbEm.NavigationListEntityProperty<Store, CashPoint>("CashPoints", true, "FK_CashPoint_Store", IbEm.QueryDirection.ToRole1);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String No = "No";
      public const String Name = "Name";
      public const String MainGln = "MainGln";
      public const String NosEnabled = "NosEnabled";
      public const String StartNoOrder = "StartNoOrder";
      public const String EndNoOrder = "EndNoOrder";
      public const String AssociationClientId = "AssociationClientId";
      public const String ShortName = "ShortName";
      public const String VatSetId = "VatSetId";
      public const String AddressId = "AddressId";
      public const String StoreGroupId = "StoreGroupId";
      public const String CurrencyId = "CurrencyId";
      public const String StoreVatNo = "StoreVatNo";
      public const String LogoPath = "LogoPath";
      public const String ChangedAt = "ChangedAt";
      public const String InvoiceAddressId = "InvoiceAddressId";
      public const String StartNoBilling = "StartNoBilling";
      public const String EndNoBilling = "EndNoBilling";
      public const String StartNoCreditNote = "StartNoCreditNote";
      public const String EndNoCreditNote = "EndNoCreditNote";
      public const String ReceiptFooter = "ReceiptFooter";
      public const String StartNoBillingOffer = "StartNoBillingOffer";
      public const String EndNoBillingOffer = "EndNoBillingOffer";
      public const String StartNoBillingOrder = "StartNoBillingOrder";
      public const String EndNoBillingOrder = "EndNoBillingOrder";
      public const String DeliveryAddressId = "DeliveryAddressId";
      public const String MainFon = "MainFon";
      public const String MainFax = "MainFax";
      public const String Email = "Email";
      public const String WebSite = "WebSite";
      public const String MobileFon = "MobileFon";
      public const String ReceiptFooterPicturePath = "ReceiptFooterPicturePath";
      public const String ReceiptFooterAsText = "ReceiptFooterAsText";
      public const String CashPoints = "CashPoints";
    }
    #endregion EntityPropertyNames
  }
  #endregion Store class

  #region DbVersion class

  /// <summary>The auto-generated DbVersion class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"RetailEntities")]
  [IbEm.DefaultEntitySetName(@"RetailEntities.DbVersions")]
  public partial class DbVersion : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<DbVersion, object>> expr) {
      return IbCore.PropertyPath.For<DbVersion>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="DbVersion_Id")]
    public long Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the VersionNo. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="VersionNo", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="DbVersion_VersionNo")]
    public long VersionNo {
      get { return PropertyMetadata.VersionNo.GetValue(this); }
      set { PropertyMetadata.VersionNo.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DbVersion, long> Id = new IbEm.DataEntityProperty<DbVersion, long>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The VersionNo <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<DbVersion, long> VersionNo = new IbEm.DataEntityProperty<DbVersion, long>("VersionNo", false, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String VersionNo = "VersionNo";
    }
    #endregion EntityPropertyNames
  }
  #endregion DbVersion class

  #region LogCommon class

  /// <summary>The auto-generated LogCommon class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"RetailEntities")]
  [IbEm.DefaultEntitySetName(@"RetailEntities.LogCommons")]
  public partial class LogCommon : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<LogCommon, object>> expr) {
      return IbCore.PropertyPath.For<LogCommon>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="LogCommon_Id")]
    public long Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Date. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Date", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="LogCommon_Date")]
    public System.DateTime Date {
      get { return PropertyMetadata.Date.GetValue(this); }
      set { PropertyMetadata.Date.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Category. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Category", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=50, IsRequired=true, ErrorMessageResourceName="LogCommon_Category")]
    public string Category {
      get { return PropertyMetadata.Category.GetValue(this); }
      set { PropertyMetadata.Category.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Status. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Status", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=10, IsRequired=true, ErrorMessageResourceName="LogCommon_Status")]
    public string Status {
      get { return PropertyMetadata.Status.GetValue(this); }
      set { PropertyMetadata.Status.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Message. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Message", AutoGenerateField=true)]
    [IbVal.StringLengthVerifier(MaxValue=1000, IsRequired=true, ErrorMessageResourceName="LogCommon_Message")]
    public string Message {
      get { return PropertyMetadata.Message.GetValue(this); }
      set { PropertyMetadata.Message.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<LogCommon, long> Id = new IbEm.DataEntityProperty<LogCommon, long>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The Date <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<LogCommon, System.DateTime> Date = new IbEm.DataEntityProperty<LogCommon, System.DateTime>("Date", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Category <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<LogCommon, string> Category = new IbEm.DataEntityProperty<LogCommon, string>("Category", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Status <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<LogCommon, string> Status = new IbEm.DataEntityProperty<LogCommon, string>("Status", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Message <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<LogCommon, string> Message = new IbEm.DataEntityProperty<LogCommon, string>("Message", false, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String Date = "Date";
      public const String Category = "Category";
      public const String Status = "Status";
      public const String Message = "Message";
    }
    #endregion EntityPropertyNames
  }
  #endregion LogCommon class

  #region BackgroundWorkerStatu class

  /// <summary>The auto-generated BackgroundWorkerStatu class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"RetailEntities")]
  [IbEm.DefaultEntitySetName(@"RetailEntities.BackgroundWorkerStatus")]
  public partial class BackgroundWorkerStatu : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<BackgroundWorkerStatu, object>> expr) {
      return IbCore.PropertyPath.For<BackgroundWorkerStatu>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BackgroundWorkerStatu_Id")]
    public long Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PID. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PID", AutoGenerateField=true)]
    [IbVal.RequiredValueVerifier( ErrorMessageResourceName="BackgroundWorkerStatu_PID")]
    public int PID {
      get { return PropertyMetadata.PID.GetValue(this); }
      set { PropertyMetadata.PID.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BackgroundWorkerStatu, long> Id = new IbEm.DataEntityProperty<BackgroundWorkerStatu, long>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The PID <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<BackgroundWorkerStatu, int> PID = new IbEm.DataEntityProperty<BackgroundWorkerStatu, int>("PID", false, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String PID = "PID";
    }
    #endregion EntityPropertyNames
  }
  #endregion BackgroundWorkerStatu class

  #region EntityRelations

  /// <summary>
  /// A generated class that returns the relations between entities in this model.
  /// </summary>
  [IbCore.IdeaBladeGuid("dee02eb5-2e35-4891-9529-f32d6c215ce8", "2.1.4")]
  public partial class EntityRelations : IbEm.IEntityRelations {

    /// Explicit static constructor ensures static fields are initialized.
    static EntityRelations() {}

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="CashPoint"/> and <see cref="Store"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_CashPoint_Store = new IbEm.EntityRelation(
      typeof(CashPoint),
      typeof(Store),
       new IbEm.DataEntityProperty[] { CashPoint.PropertyMetadata.StoreId},
       new IbEm.DataEntityProperty[] { Store.PropertyMetadata.Id},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_CashPoint_Store");
  }
  #endregion EntityRelations
}
