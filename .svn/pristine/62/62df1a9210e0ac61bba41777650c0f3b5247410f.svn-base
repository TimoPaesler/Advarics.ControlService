// ------------------------------------------------------------------------------
// DO NOT MODIFY THIS CLASS - AutoGenerated Code
//    Any changes made to this code will be lost the next time this 
//    code is regenerated.
// 
//    Generated at: 11.01.2013 12:02:56
//    DevForce version: 7.0.3.0
//    Template version: 2.1.4
// ------------------------------------------------------------------------------
using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using IbEm   = IdeaBlade.EntityModel;
using IbCore = IdeaBlade.Core;
using IbVal  = IdeaBlade.Validation;

[module: IbCore.IdeaBladeLicense("s6EnLIamvZYKJn0DIfFT/1paElFcvmQSc/d3cUS/xEo1qNQo2tvwq/djS0ZB5gAq")]

namespace Advarics.ControlServiceClient { 

  #region Entities

  /// <summary>
  /// The domain-specific EntityManager for your domain model.
  /// </summary>
  public partial class Entities : IbEm.EntityManager {

    #region Constructors

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(bool, string, IbEm.EntityServiceOption, string)"/>. </summary>
    public Entities(bool shouldConnect=true, string dataSourceExtension=null, IbEm.EntityServiceOption entityServiceOption=IbEm.EntityServiceOption.UseDefaultService, string compositionContextName=null) : base(shouldConnect, dataSourceExtension, entityServiceOption, compositionContextName) {}

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(IbEm.EntityManagerContext)"/>. </summary>
    public Entities(IbEm.EntityManagerContext entityManagerContext) : base(entityManagerContext) {}

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(IbEm.EntityManager, bool, string, IbEm.EntityServiceOption, string)"/>. </summary>
    public Entities(IbEm.EntityManager entityManager, bool shouldConnect, string dataSourceExtension=null, IbEm.EntityServiceOption entityServiceOption=IbEm.EntityServiceOption.UseDefaultService, string compositionContextName=null) : base(entityManager, shouldConnect, dataSourceExtension, entityServiceOption, compositionContextName) {}

    /// <summary>See <see cref="M:IbEm.EntityManager.#ctor(IbEm.EntityManager, IbEm.EntityManagerContext)"/>. </summary>
    public Entities(IbEm.EntityManager entityManager, IbEm.EntityManagerContext entityManagerContext=null) : base(entityManager, entityManagerContext) {}

    static Entities() {
      IbEm.EntityRelation.InitializeEntityRelations(IdeaBlade.Core.Reflection.ReflectionExtensions.GetAssembly(typeof(Entities)));
    }
    #endregion Constructors

    #region EntityQueries

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<CommonSetting> CommonSettings {
      get { return new IbEm.EntityQuery<CommonSetting>("CommonSettings", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<Customer> Customers {
      get { return new IbEm.EntityQuery<Customer>("Customers", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<Server> Servers {
      get { return new IbEm.EntityQuery<Server>("Servers", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<ServerSetting> ServerSettings {
      get { return new IbEm.EntityQuery<ServerSetting>("ServerSettings", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<Cash> Cashes {
      get { return new IbEm.EntityQuery<Cash>("Cashes", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<UpdateProfile> UpdateProfiles {
      get { return new IbEm.EntityQuery<UpdateProfile>("UpdateProfiles", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<Worker> Workers {
      get { return new IbEm.EntityQuery<Worker>("Workers", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<JobAction> JobActions {
      get { return new IbEm.EntityQuery<JobAction>("JobActions", this); }
    }

    /// <summary>Gets the <see cref="T:IbEm.EntityQuery"/> associated with the given EntitySet name. </summary>
    public IbEm.EntityQuery<Log> Logs {
      get { return new IbEm.EntityQuery<Log>("Logs", this); }
    }
    #endregion EntityQueries
  }
  #endregion Entities

  #region CommonSetting class

  /// <summary>The auto-generated CommonSetting class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"Entities")]
  [IbEm.DefaultEntitySetName(@"Entities.CommonSettings")]
  public partial class CommonSetting : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<CommonSetting, object>> expr) {
      return IbCore.PropertyPath.For<CommonSetting>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [Required]
    public long Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BackupStoreTimeDays. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BackupStoreTimeDays", AutoGenerateField=true)]
    [Required]
    public int BackupStoreTimeDays {
      get { return PropertyMetadata.BackupStoreTimeDays.GetValue(this); }
      set { PropertyMetadata.BackupStoreTimeDays.SetValue(this, value); }
    }

    /// <summary>Gets or sets the LocalUpdatePath. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="LocalUpdatePath", AutoGenerateField=true)]
    [Required()]
    [StringLength(50)]
    public string LocalUpdatePath {
      get { return PropertyMetadata.LocalUpdatePath.GetValue(this); }
      set { PropertyMetadata.LocalUpdatePath.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CommonSetting, long> Id = new IbEm.DataEntityProperty<CommonSetting, long>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The BackupStoreTimeDays <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CommonSetting, int> BackupStoreTimeDays = new IbEm.DataEntityProperty<CommonSetting, int>("BackupStoreTimeDays", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The LocalUpdatePath <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<CommonSetting, string> LocalUpdatePath = new IbEm.DataEntityProperty<CommonSetting, string>("LocalUpdatePath", false, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String BackupStoreTimeDays = "BackupStoreTimeDays";
      public const String LocalUpdatePath = "LocalUpdatePath";
    }
    #endregion EntityPropertyNames
  }
  #endregion CommonSetting class

  #region Customer class

  /// <summary>The auto-generated Customer class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"Entities")]
  [IbEm.DefaultEntitySetName(@"Entities.Customers")]
  public partial class Customer : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<Customer, object>> expr) {
      return IbCore.PropertyPath.For<Customer>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [Required]
    public long Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the No. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="No", AutoGenerateField=true)]
    [Required]
    public long No {
      get { return PropertyMetadata.No.GetValue(this); }
      set { PropertyMetadata.No.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Name", AutoGenerateField=true)]
    [Required()]
    [StringLength(50)]
    public string Name {
      get { return PropertyMetadata.Name.GetValue(this); }
      set { PropertyMetadata.Name.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ToBackup. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ToBackup", AutoGenerateField=true)]
    [Required]
    public bool ToBackup {
      get { return PropertyMetadata.ToBackup.GetValue(this); }
      set { PropertyMetadata.ToBackup.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ToUpdate. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ToUpdate", AutoGenerateField=true)]
    [Required]
    public bool ToUpdate {
      get { return PropertyMetadata.ToUpdate.GetValue(this); }
      set { PropertyMetadata.ToUpdate.SetValue(this, value); }
    }

    /// <summary>Gets or sets the UpdateProfileId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="UpdateProfileId", AutoGenerateField=false)]
    [Required]
    public long UpdateProfileId {
      get { return PropertyMetadata.UpdateProfileId.GetValue(this); }
      set { PropertyMetadata.UpdateProfileId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the LastBackupDate. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="LastBackupDate", AutoGenerateField=true)]
    [Required]
    public System.DateTime LastBackupDate {
      get { return PropertyMetadata.LastBackupDate.GetValue(this); }
      set { PropertyMetadata.LastBackupDate.SetValue(this, value); }
    }

    /// <summary>Gets or sets the LastBackupFile. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="LastBackupFile", AutoGenerateField=true)]
    [Required]
    public string LastBackupFile {
      get { return PropertyMetadata.LastBackupFile.GetValue(this); }
      set { PropertyMetadata.LastBackupFile.SetValue(this, value); }
    }

    /// <summary>Gets or sets the UpdatePackage. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="UpdatePackage", AutoGenerateField=true)]
    [Required]
    public long UpdatePackage {
      get { return PropertyMetadata.UpdatePackage.GetValue(this); }
      set { PropertyMetadata.UpdatePackage.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RetailProgramVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RetailProgramVersion", AutoGenerateField=true)]
    [Required()]
    [StringLength(50)]
    public string RetailProgramVersion {
      get { return PropertyMetadata.RetailProgramVersion.GetValue(this); }
      set { PropertyMetadata.RetailProgramVersion.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ServerId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="ServerId", AutoGenerateField=false)]
    [Required]
    public long ServerId {
      get { return PropertyMetadata.ServerId.GetValue(this); }
      set { PropertyMetadata.ServerId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ServerBasePath. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ServerBasePath", AutoGenerateField=true)]
    [Required]
    public string ServerBasePath {
      get { return PropertyMetadata.ServerBasePath.GetValue(this); }
      set { PropertyMetadata.ServerBasePath.SetValue(this, value); }
    }

    /// <summary>Gets or sets the SecuDataServicePakNo. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="SecuDataServicePakNo", AutoGenerateField=true)]
    [Required]
    public long SecuDataServicePakNo {
      get { return PropertyMetadata.SecuDataServicePakNo.GetValue(this); }
      set { PropertyMetadata.SecuDataServicePakNo.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StatisticServicePakNo. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StatisticServicePakNo", AutoGenerateField=true)]
    [Required]
    public long StatisticServicePakNo {
      get { return PropertyMetadata.StatisticServicePakNo.GetValue(this); }
      set { PropertyMetadata.StatisticServicePakNo.SetValue(this, value); }
    }

    /// <summary>Gets or sets the WebShopServicePakNo. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="WebShopServicePakNo", AutoGenerateField=true)]
    [Required]
    public long WebShopServicePakNo {
      get { return PropertyMetadata.WebShopServicePakNo.GetValue(this); }
      set { PropertyMetadata.WebShopServicePakNo.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RentalServicePakNo. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RentalServicePakNo", AutoGenerateField=true)]
    [Required]
    public long RentalServicePakNo {
      get { return PropertyMetadata.RentalServicePakNo.GetValue(this); }
      set { PropertyMetadata.RentalServicePakNo.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RetailPakNo. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RetailPakNo", AutoGenerateField=true)]
    [Required]
    public long RetailPakNo {
      get { return PropertyMetadata.RetailPakNo.GetValue(this); }
      set { PropertyMetadata.RetailPakNo.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DBName. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DBName", AutoGenerateField=true)]
    [Required()]
    [StringLength(50)]
    public string DBName {
      get { return PropertyMetadata.DBName.GetValue(this); }
      set { PropertyMetadata.DBName.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RetailDBVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RetailDBVersion", AutoGenerateField=true)]
    [Required]
    public long RetailDBVersion {
      get { return PropertyMetadata.RetailDBVersion.GetValue(this); }
      set { PropertyMetadata.RetailDBVersion.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ServerUrl. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ServerUrl", AutoGenerateField=true)]
    [StringLength(50)]
    public string ServerUrl {
      get { return PropertyMetadata.ServerUrl.GetValue(this); }
      set { PropertyMetadata.ServerUrl.SetValue(this, value); }
    }

    /// <summary>Gets or sets the LastUpdatedPackageNo. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="LastUpdatedPackageNo", AutoGenerateField=true)]
    public System.Nullable<long> LastUpdatedPackageNo {
      get { return PropertyMetadata.LastUpdatedPackageNo.GetValue(this); }
      set { PropertyMetadata.LastUpdatedPackageNo.SetValue(this, value); }
    }

    /// <summary>Gets or sets the NoUpdate. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="NoUpdate", AutoGenerateField=true)]
    public System.Nullable<bool> NoUpdate {
      get { return PropertyMetadata.NoUpdate.GetValue(this); }
      set { PropertyMetadata.NoUpdate.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets the Cashes. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Cashes", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<Cash> Cashes {
      get { return PropertyMetadata.Cashes.GetValue(this); }
    }

    /// <summary>Gets or sets the Server. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Server", AutoGenerateField=false)]
    public Server Server {
      get { return PropertyMetadata.Server.GetValue(this); }
      set { PropertyMetadata.Server.SetValue(this, value); }
    }

    /// <summary>Gets or sets the UpdateProfile. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="UpdateProfile", AutoGenerateField=false)]
    public UpdateProfile UpdateProfile {
      get { return PropertyMetadata.UpdateProfile.GetValue(this); }
      set { PropertyMetadata.UpdateProfile.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, long> Id = new IbEm.DataEntityProperty<Customer, long>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The No <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, long> No = new IbEm.DataEntityProperty<Customer, long>("No", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, string> Name = new IbEm.DataEntityProperty<Customer, string>("Name", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ToBackup <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, bool> ToBackup = new IbEm.DataEntityProperty<Customer, bool>("ToBackup", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ToUpdate <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, bool> ToUpdate = new IbEm.DataEntityProperty<Customer, bool>("ToUpdate", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The UpdateProfileId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, long> UpdateProfileId = new IbEm.DataEntityProperty<Customer, long>("UpdateProfileId", false, false, IbEm.ConcurrencyStrategy.None, false, "UpdateProfile");

      /// <summary>The LastBackupDate <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, System.DateTime> LastBackupDate = new IbEm.DataEntityProperty<Customer, System.DateTime>("LastBackupDate", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The LastBackupFile <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, string> LastBackupFile = new IbEm.DataEntityProperty<Customer, string>("LastBackupFile", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The UpdatePackage <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, long> UpdatePackage = new IbEm.DataEntityProperty<Customer, long>("UpdatePackage", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RetailProgramVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, string> RetailProgramVersion = new IbEm.DataEntityProperty<Customer, string>("RetailProgramVersion", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ServerId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, long> ServerId = new IbEm.DataEntityProperty<Customer, long>("ServerId", false, false, IbEm.ConcurrencyStrategy.None, false, "Server");

      /// <summary>The ServerBasePath <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, string> ServerBasePath = new IbEm.DataEntityProperty<Customer, string>("ServerBasePath", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The SecuDataServicePakNo <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, long> SecuDataServicePakNo = new IbEm.DataEntityProperty<Customer, long>("SecuDataServicePakNo", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StatisticServicePakNo <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, long> StatisticServicePakNo = new IbEm.DataEntityProperty<Customer, long>("StatisticServicePakNo", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The WebShopServicePakNo <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, long> WebShopServicePakNo = new IbEm.DataEntityProperty<Customer, long>("WebShopServicePakNo", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RentalServicePakNo <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, long> RentalServicePakNo = new IbEm.DataEntityProperty<Customer, long>("RentalServicePakNo", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RetailPakNo <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, long> RetailPakNo = new IbEm.DataEntityProperty<Customer, long>("RetailPakNo", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DBName <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, string> DBName = new IbEm.DataEntityProperty<Customer, string>("DBName", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RetailDBVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, long> RetailDBVersion = new IbEm.DataEntityProperty<Customer, long>("RetailDBVersion", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ServerUrl <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, string> ServerUrl = new IbEm.DataEntityProperty<Customer, string>("ServerUrl", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The LastUpdatedPackageNo <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, System.Nullable<long>> LastUpdatedPackageNo = new IbEm.DataEntityProperty<Customer, System.Nullable<long>>("LastUpdatedPackageNo", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The NoUpdate <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Customer, System.Nullable<bool>> NoUpdate = new IbEm.DataEntityProperty<Customer, System.Nullable<bool>>("NoUpdate", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Cashes <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Customer, Cash> Cashes = new IbEm.NavigationListEntityProperty<Customer, Cash>("Cashes", true, "FK_Cash_Customer", IbEm.QueryDirection.ToRole1);

      /// <summary>The Server <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<Customer, Server> Server = new IbEm.NavigationScalarEntityProperty<Customer, Server>("Server", true, "FK_Customer_Server", IbEm.QueryDirection.ToRole2);

      /// <summary>The UpdateProfile <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<Customer, UpdateProfile> UpdateProfile = new IbEm.NavigationScalarEntityProperty<Customer, UpdateProfile>("UpdateProfile", true, "FK_Customer_UpdateProfile", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String No = "No";
      public const String Name = "Name";
      public const String ToBackup = "ToBackup";
      public const String ToUpdate = "ToUpdate";
      public const String UpdateProfileId = "UpdateProfileId";
      public const String LastBackupDate = "LastBackupDate";
      public const String LastBackupFile = "LastBackupFile";
      public const String UpdatePackage = "UpdatePackage";
      public const String RetailProgramVersion = "RetailProgramVersion";
      public const String ServerId = "ServerId";
      public const String ServerBasePath = "ServerBasePath";
      public const String SecuDataServicePakNo = "SecuDataServicePakNo";
      public const String StatisticServicePakNo = "StatisticServicePakNo";
      public const String WebShopServicePakNo = "WebShopServicePakNo";
      public const String RentalServicePakNo = "RentalServicePakNo";
      public const String RetailPakNo = "RetailPakNo";
      public const String DBName = "DBName";
      public const String RetailDBVersion = "RetailDBVersion";
      public const String ServerUrl = "ServerUrl";
      public const String LastUpdatedPackageNo = "LastUpdatedPackageNo";
      public const String NoUpdate = "NoUpdate";
      public const String Cashes = "Cashes";
      public const String Server = "Server";
      public const String UpdateProfile = "UpdateProfile";
    }
    #endregion EntityPropertyNames
  }
  #endregion Customer class

  #region Server class

  /// <summary>The auto-generated Server class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"Entities")]
  [IbEm.DefaultEntitySetName(@"Entities.Servers")]
  public partial class Server : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<Server, object>> expr) {
      return IbCore.PropertyPath.For<Server>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [Required]
    public long Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the No. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="No", AutoGenerateField=true)]
    [Required]
    public long No {
      get { return PropertyMetadata.No.GetValue(this); }
      set { PropertyMetadata.No.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Name", AutoGenerateField=true)]
    [Required()]
    [StringLength(50)]
    public string Name {
      get { return PropertyMetadata.Name.GetValue(this); }
      set { PropertyMetadata.Name.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets the Customers. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Customers", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<Customer> Customers {
      get { return PropertyMetadata.Customers.GetValue(this); }
    }

    /// <summary>Gets the ServerSettings. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="ServerSettings", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<ServerSetting> ServerSettings {
      get { return PropertyMetadata.ServerSettings.GetValue(this); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Server, long> Id = new IbEm.DataEntityProperty<Server, long>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The No <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Server, long> No = new IbEm.DataEntityProperty<Server, long>("No", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Server, string> Name = new IbEm.DataEntityProperty<Server, string>("Name", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Customers <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Server, Customer> Customers = new IbEm.NavigationListEntityProperty<Server, Customer>("Customers", true, "FK_Customer_Server", IbEm.QueryDirection.ToRole1);

      /// <summary>The ServerSettings <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<Server, ServerSetting> ServerSettings = new IbEm.NavigationListEntityProperty<Server, ServerSetting>("ServerSettings", true, "FK_ServerSettings_Server", IbEm.QueryDirection.ToRole1);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String No = "No";
      public const String Name = "Name";
      public const String Customers = "Customers";
      public const String ServerSettings = "ServerSettings";
    }
    #endregion EntityPropertyNames
  }
  #endregion Server class

  #region ServerSetting class

  /// <summary>The auto-generated ServerSetting class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"Entities")]
  [IbEm.DefaultEntitySetName(@"Entities.ServerSettings")]
  public partial class ServerSetting : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<ServerSetting, object>> expr) {
      return IbCore.PropertyPath.For<ServerSetting>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [Required]
    public long Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ServerId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="ServerId", AutoGenerateField=false)]
    [Required]
    public long ServerId {
      get { return PropertyMetadata.ServerId.GetValue(this); }
      set { PropertyMetadata.ServerId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BackupStoragePath. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BackupStoragePath", AutoGenerateField=true)]
    [Required]
    public string BackupStoragePath {
      get { return PropertyMetadata.BackupStoragePath.GetValue(this); }
      set { PropertyMetadata.BackupStoragePath.SetValue(this, value); }
    }

    /// <summary>Gets or sets the UploadStoragePath. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="UploadStoragePath", AutoGenerateField=true)]
    [Required]
    public string UploadStoragePath {
      get { return PropertyMetadata.UploadStoragePath.GetValue(this); }
      set { PropertyMetadata.UploadStoragePath.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Url. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Url", AutoGenerateField=true)]
    [Required]
    public string Url {
      get { return PropertyMetadata.Url.GetValue(this); }
      set { PropertyMetadata.Url.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BaseUpdatePath. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BaseUpdatePath", AutoGenerateField=true)]
    [Required]
    public string BaseUpdatePath {
      get { return PropertyMetadata.BaseUpdatePath.GetValue(this); }
      set { PropertyMetadata.BaseUpdatePath.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BaseAdvProgramPath. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BaseAdvProgramPath", AutoGenerateField=true)]
    [Required]
    public string BaseAdvProgramPath {
      get { return PropertyMetadata.BaseAdvProgramPath.GetValue(this); }
      set { PropertyMetadata.BaseAdvProgramPath.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the Server. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Server", AutoGenerateField=false)]
    public Server Server {
      get { return PropertyMetadata.Server.GetValue(this); }
      set { PropertyMetadata.Server.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<ServerSetting, long> Id = new IbEm.DataEntityProperty<ServerSetting, long>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The ServerId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<ServerSetting, long> ServerId = new IbEm.DataEntityProperty<ServerSetting, long>("ServerId", false, false, IbEm.ConcurrencyStrategy.None, false, "Server");

      /// <summary>The BackupStoragePath <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<ServerSetting, string> BackupStoragePath = new IbEm.DataEntityProperty<ServerSetting, string>("BackupStoragePath", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The UploadStoragePath <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<ServerSetting, string> UploadStoragePath = new IbEm.DataEntityProperty<ServerSetting, string>("UploadStoragePath", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Url <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<ServerSetting, string> Url = new IbEm.DataEntityProperty<ServerSetting, string>("Url", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BaseUpdatePath <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<ServerSetting, string> BaseUpdatePath = new IbEm.DataEntityProperty<ServerSetting, string>("BaseUpdatePath", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BaseAdvProgramPath <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<ServerSetting, string> BaseAdvProgramPath = new IbEm.DataEntityProperty<ServerSetting, string>("BaseAdvProgramPath", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Server <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<ServerSetting, Server> Server = new IbEm.NavigationScalarEntityProperty<ServerSetting, Server>("Server", true, "FK_ServerSettings_Server", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String ServerId = "ServerId";
      public const String BackupStoragePath = "BackupStoragePath";
      public const String UploadStoragePath = "UploadStoragePath";
      public const String Url = "Url";
      public const String BaseUpdatePath = "BaseUpdatePath";
      public const String BaseAdvProgramPath = "BaseAdvProgramPath";
      public const String Server = "Server";
    }
    #endregion EntityPropertyNames
  }
  #endregion ServerSetting class

  #region Cash class

  /// <summary>The auto-generated Cash class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"Entities")]
  [IbEm.DefaultEntitySetName(@"Entities.Cashes")]
  public partial class Cash : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<Cash, object>> expr) {
      return IbCore.PropertyPath.For<Cash>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [Required]
    public long Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the No. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="No", AutoGenerateField=true)]
    [Required]
    public long No {
      get { return PropertyMetadata.No.GetValue(this); }
      set { PropertyMetadata.No.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Name", AutoGenerateField=true)]
    [Required()]
    [StringLength(50)]
    public string Name {
      get { return PropertyMetadata.Name.GetValue(this); }
      set { PropertyMetadata.Name.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CustomerId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="CustomerId", AutoGenerateField=false)]
    [Required]
    public long CustomerId {
      get { return PropertyMetadata.CustomerId.GetValue(this); }
      set { PropertyMetadata.CustomerId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CashProgramVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CashProgramVersion", AutoGenerateField=true)]
    [Required()]
    [StringLength(50)]
    public string CashProgramVersion {
      get { return PropertyMetadata.CashProgramVersion.GetValue(this); }
      set { PropertyMetadata.CashProgramVersion.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DataServiceProgramVersion. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DataServiceProgramVersion", AutoGenerateField=true)]
    [Required()]
    [StringLength(50)]
    public string DataServiceProgramVersion {
      get { return PropertyMetadata.DataServiceProgramVersion.GetValue(this); }
      set { PropertyMetadata.DataServiceProgramVersion.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StoreNo. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StoreNo", AutoGenerateField=true)]
    [Required]
    public long StoreNo {
      get { return PropertyMetadata.StoreNo.GetValue(this); }
      set { PropertyMetadata.StoreNo.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CashPackageNo. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CashPackageNo", AutoGenerateField=true)]
    [Required]
    public long CashPackageNo {
      get { return PropertyMetadata.CashPackageNo.GetValue(this); }
      set { PropertyMetadata.CashPackageNo.SetValue(this, value); }
    }

    /// <summary>Gets or sets the DataServicePackageNo. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="DataServicePackageNo", AutoGenerateField=true)]
    [Required]
    public long DataServicePackageNo {
      get { return PropertyMetadata.DataServicePackageNo.GetValue(this); }
      set { PropertyMetadata.DataServicePackageNo.SetValue(this, value); }
    }

    /// <summary>Gets or sets the sync. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="sync", AutoGenerateField=true)]
    [Required]
    public bool sync {
      get { return PropertyMetadata.sync.GetValue(this); }
      set { PropertyMetadata.sync.SetValue(this, value); }
    }

    /// <summary>Gets or sets the LastSync. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="LastSync", AutoGenerateField=true)]
    [Required]
    public System.DateTime LastSync {
      get { return PropertyMetadata.LastSync.GetValue(this); }
      set { PropertyMetadata.LastSync.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the Customer. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Customer", AutoGenerateField=false)]
    public Customer Customer {
      get { return PropertyMetadata.Customer.GetValue(this); }
      set { PropertyMetadata.Customer.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Cash, long> Id = new IbEm.DataEntityProperty<Cash, long>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The No <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Cash, long> No = new IbEm.DataEntityProperty<Cash, long>("No", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Cash, string> Name = new IbEm.DataEntityProperty<Cash, string>("Name", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CustomerId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Cash, long> CustomerId = new IbEm.DataEntityProperty<Cash, long>("CustomerId", false, false, IbEm.ConcurrencyStrategy.None, false, "Customer");

      /// <summary>The CashProgramVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Cash, string> CashProgramVersion = new IbEm.DataEntityProperty<Cash, string>("CashProgramVersion", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DataServiceProgramVersion <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Cash, string> DataServiceProgramVersion = new IbEm.DataEntityProperty<Cash, string>("DataServiceProgramVersion", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StoreNo <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Cash, long> StoreNo = new IbEm.DataEntityProperty<Cash, long>("StoreNo", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CashPackageNo <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Cash, long> CashPackageNo = new IbEm.DataEntityProperty<Cash, long>("CashPackageNo", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The DataServicePackageNo <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Cash, long> DataServicePackageNo = new IbEm.DataEntityProperty<Cash, long>("DataServicePackageNo", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The sync <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Cash, bool> sync = new IbEm.DataEntityProperty<Cash, bool>("sync", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The LastSync <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Cash, System.DateTime> LastSync = new IbEm.DataEntityProperty<Cash, System.DateTime>("LastSync", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Customer <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<Cash, Customer> Customer = new IbEm.NavigationScalarEntityProperty<Cash, Customer>("Customer", true, "FK_Cash_Customer", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String No = "No";
      public const String Name = "Name";
      public const String CustomerId = "CustomerId";
      public const String CashProgramVersion = "CashProgramVersion";
      public const String DataServiceProgramVersion = "DataServiceProgramVersion";
      public const String StoreNo = "StoreNo";
      public const String CashPackageNo = "CashPackageNo";
      public const String DataServicePackageNo = "DataServicePackageNo";
      public const String sync = "sync";
      public const String LastSync = "LastSync";
      public const String Customer = "Customer";
    }
    #endregion EntityPropertyNames
  }
  #endregion Cash class

  #region UpdateProfile class

  /// <summary>The auto-generated UpdateProfile class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"Entities")]
  [IbEm.DefaultEntitySetName(@"Entities.UpdateProfiles")]
  public partial class UpdateProfile : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<UpdateProfile, object>> expr) {
      return IbCore.PropertyPath.For<UpdateProfile>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [Required]
    public long Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the No. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="No", AutoGenerateField=true)]
    [Required]
    public long No {
      get { return PropertyMetadata.No.GetValue(this); }
      set { PropertyMetadata.No.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Name. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Name", AutoGenerateField=true)]
    [Required()]
    [StringLength(50)]
    public string Name {
      get { return PropertyMetadata.Name.GetValue(this); }
      set { PropertyMetadata.Name.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets the Customers. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Customers", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<Customer> Customers {
      get { return PropertyMetadata.Customers.GetValue(this); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<UpdateProfile, long> Id = new IbEm.DataEntityProperty<UpdateProfile, long>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The No <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<UpdateProfile, long> No = new IbEm.DataEntityProperty<UpdateProfile, long>("No", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Name <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<UpdateProfile, string> Name = new IbEm.DataEntityProperty<UpdateProfile, string>("Name", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Customers <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<UpdateProfile, Customer> Customers = new IbEm.NavigationListEntityProperty<UpdateProfile, Customer>("Customers", true, "FK_Customer_UpdateProfile", IbEm.QueryDirection.ToRole1);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String No = "No";
      public const String Name = "Name";
      public const String Customers = "Customers";
    }
    #endregion EntityPropertyNames
  }
  #endregion UpdateProfile class

  #region Worker class

  /// <summary>The auto-generated Worker class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"Entities")]
  [IbEm.DefaultEntitySetName(@"Entities.Workers")]
  public partial class Worker : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<Worker, object>> expr) {
      return IbCore.PropertyPath.For<Worker>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [Required]
    public long Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BaseTyp. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BaseTyp", AutoGenerateField=true)]
    [Required]
    public int BaseTyp {
      get { return PropertyMetadata.BaseTyp.GetValue(this); }
      set { PropertyMetadata.BaseTyp.SetValue(this, value); }
    }

    /// <summary>Gets or sets the BaseTypId. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="BaseTypId", AutoGenerateField=true)]
    [Required]
    public long BaseTypId {
      get { return PropertyMetadata.BaseTypId.GetValue(this); }
      set { PropertyMetadata.BaseTypId.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StartTime. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StartTime", AutoGenerateField=true)]
    [Required]
    public System.DateTime StartTime {
      get { return PropertyMetadata.StartTime.GetValue(this); }
      set { PropertyMetadata.StartTime.SetValue(this, value); }
    }

    /// <summary>Gets or sets the RepeatOnError. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="RepeatOnError", AutoGenerateField=true)]
    [Required]
    public bool RepeatOnError {
      get { return PropertyMetadata.RepeatOnError.GetValue(this); }
      set { PropertyMetadata.RepeatOnError.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Successful. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Successful", AutoGenerateField=true)]
    [Required]
    public bool Successful {
      get { return PropertyMetadata.Successful.GetValue(this); }
      set { PropertyMetadata.Successful.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ErrorRepeatCount. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ErrorRepeatCount", AutoGenerateField=true)]
    [Required]
    public int ErrorRepeatCount {
      get { return PropertyMetadata.ErrorRepeatCount.GetValue(this); }
      set { PropertyMetadata.ErrorRepeatCount.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Operation. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Operation", AutoGenerateField=true)]
    [Required]
    public int Operation {
      get { return PropertyMetadata.Operation.GetValue(this); }
      set { PropertyMetadata.Operation.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Interval. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Interval", AutoGenerateField=true)]
    [Required]
    public int Interval {
      get { return PropertyMetadata.Interval.GetValue(this); }
      set { PropertyMetadata.Interval.SetValue(this, value); }
    }

    /// <summary>Gets or sets the PackageNo. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="PackageNo", AutoGenerateField=true)]
    [Required]
    public long PackageNo {
      get { return PropertyMetadata.PackageNo.GetValue(this); }
      set { PropertyMetadata.PackageNo.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Worker, long> Id = new IbEm.DataEntityProperty<Worker, long>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The BaseTyp <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Worker, int> BaseTyp = new IbEm.DataEntityProperty<Worker, int>("BaseTyp", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The BaseTypId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Worker, long> BaseTypId = new IbEm.DataEntityProperty<Worker, long>("BaseTypId", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StartTime <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Worker, System.DateTime> StartTime = new IbEm.DataEntityProperty<Worker, System.DateTime>("StartTime", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The RepeatOnError <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Worker, bool> RepeatOnError = new IbEm.DataEntityProperty<Worker, bool>("RepeatOnError", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Successful <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Worker, bool> Successful = new IbEm.DataEntityProperty<Worker, bool>("Successful", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ErrorRepeatCount <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Worker, int> ErrorRepeatCount = new IbEm.DataEntityProperty<Worker, int>("ErrorRepeatCount", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Operation <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Worker, int> Operation = new IbEm.DataEntityProperty<Worker, int>("Operation", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Interval <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Worker, int> Interval = new IbEm.DataEntityProperty<Worker, int>("Interval", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The PackageNo <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Worker, long> PackageNo = new IbEm.DataEntityProperty<Worker, long>("PackageNo", false, false, IbEm.ConcurrencyStrategy.None, false, null);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String BaseTyp = "BaseTyp";
      public const String BaseTypId = "BaseTypId";
      public const String StartTime = "StartTime";
      public const String RepeatOnError = "RepeatOnError";
      public const String Successful = "Successful";
      public const String ErrorRepeatCount = "ErrorRepeatCount";
      public const String Operation = "Operation";
      public const String Interval = "Interval";
      public const String PackageNo = "PackageNo";
    }
    #endregion EntityPropertyNames
  }
  #endregion Worker class

  #region JobAction class

  /// <summary>The auto-generated JobAction class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"Entities")]
  [IbEm.DefaultEntitySetName(@"Entities.JobActions")]
  public partial class JobAction : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<JobAction, object>> expr) {
      return IbCore.PropertyPath.For<JobAction>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [Required]
    public long Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Status. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Status", AutoGenerateField=true)]
    [Required]
    public string Status {
      get { return PropertyMetadata.Status.GetValue(this); }
      set { PropertyMetadata.Status.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Message. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Message", AutoGenerateField=true)]
    [Required]
    public string Message {
      get { return PropertyMetadata.Message.GetValue(this); }
      set { PropertyMetadata.Message.SetValue(this, value); }
    }

    /// <summary>Gets or sets the StartTime. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="StartTime", AutoGenerateField=true)]
    [Required]
    public System.DateTime StartTime {
      get { return PropertyMetadata.StartTime.GetValue(this); }
      set { PropertyMetadata.StartTime.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Operation. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Operation", AutoGenerateField=true)]
    [Required]
    public int Operation {
      get { return PropertyMetadata.Operation.GetValue(this); }
      set { PropertyMetadata.Operation.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets the Logs. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="Logs", AutoGenerateField=false)]
    public IbEm.RelatedEntityList<Log> Logs {
      get { return PropertyMetadata.Logs.GetValue(this); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<JobAction, long> Id = new IbEm.DataEntityProperty<JobAction, long>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The Status <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<JobAction, string> Status = new IbEm.DataEntityProperty<JobAction, string>("Status", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Message <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<JobAction, string> Message = new IbEm.DataEntityProperty<JobAction, string>("Message", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The StartTime <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<JobAction, System.DateTime> StartTime = new IbEm.DataEntityProperty<JobAction, System.DateTime>("StartTime", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Operation <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<JobAction, int> Operation = new IbEm.DataEntityProperty<JobAction, int>("Operation", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Logs <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationListEntityProperty<JobAction, Log> Logs = new IbEm.NavigationListEntityProperty<JobAction, Log>("Logs", true, "FK_Log_JobAction", IbEm.QueryDirection.ToRole1);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String Status = "Status";
      public const String Message = "Message";
      public const String StartTime = "StartTime";
      public const String Operation = "Operation";
      public const String Logs = "Logs";
    }
    #endregion EntityPropertyNames
  }
  #endregion JobAction class

  #region Log class

  /// <summary>The auto-generated Log class. </summary>
  [DataContract(IsReference=true)]
  [IbEm.DataSourceKeyName(@"Entities")]
  [IbEm.DefaultEntitySetName(@"Entities.Logs")]
  public partial class Log : IbEm.Entity {

    /// <summary>Returns the property path for the given expression. </summary>
    /// <example>
    /// Usage:
    /// <code>
    ///    var r = Employee.PathFor(e => e.Manager.City); // returns "Manager.City"
    /// </code>
    /// </example>
    public static string PathFor(System.Linq.Expressions.Expression<System.Func<Log, object>> expr) {
      return IbCore.PropertyPath.For<Log>(expr);
    }

    #region Data Properties

    /// <summary>Gets or sets the Id. </summary>
    [Key]
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Id", AutoGenerateField=true)]
    [Required]
    public long Id {
      get { return PropertyMetadata.Id.GetValue(this); }
      set { PropertyMetadata.Id.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Date. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Date", AutoGenerateField=true)]
    [Required]
    public System.DateTime Date {
      get { return PropertyMetadata.Date.GetValue(this); }
      set { PropertyMetadata.Date.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Path. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Path", AutoGenerateField=true)]
    public string Path {
      get { return PropertyMetadata.Path.GetValue(this); }
      set { PropertyMetadata.Path.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Info. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Info", AutoGenerateField=true)]
    public string Info {
      get { return PropertyMetadata.Info.GetValue(this); }
      set { PropertyMetadata.Info.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Exception. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Exception", AutoGenerateField=true)]
    public string Exception {
      get { return PropertyMetadata.Exception.GetValue(this); }
      set { PropertyMetadata.Exception.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Error. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Error", AutoGenerateField=true)]
    [Required]
    public bool Error {
      get { return PropertyMetadata.Error.GetValue(this); }
      set { PropertyMetadata.Error.SetValue(this, value); }
    }

    /// <summary>Gets or sets the Description. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="Description", AutoGenerateField=true)]
    public string Description {
      get { return PropertyMetadata.Description.GetValue(this); }
      set { PropertyMetadata.Description.SetValue(this, value); }
    }

    /// <summary>Gets or sets the CustomerName. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="CustomerName", AutoGenerateField=true)]
    public string CustomerName {
      get { return PropertyMetadata.CustomerName.GetValue(this); }
      set { PropertyMetadata.CustomerName.SetValue(this, value); }
    }

    /// <summary>Gets or sets the ServerName. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="ServerName", AutoGenerateField=true)]
    public string ServerName {
      get { return PropertyMetadata.ServerName.GetValue(this); }
      set { PropertyMetadata.ServerName.SetValue(this, value); }
    }

    /// <summary>Gets or sets the WorkerStartTime. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="WorkerStartTime", AutoGenerateField=true)]
    [Required]
    public System.DateTime WorkerStartTime {
      get { return PropertyMetadata.WorkerStartTime.GetValue(this); }
      set { PropertyMetadata.WorkerStartTime.SetValue(this, value); }
    }

    /// <summary>Gets or sets the WorkerErrorCount. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="WorkerErrorCount", AutoGenerateField=true)]
    [Required]
    public int WorkerErrorCount {
      get { return PropertyMetadata.WorkerErrorCount.GetValue(this); }
      set { PropertyMetadata.WorkerErrorCount.SetValue(this, value); }
    }

    /// <summary>Gets or sets the WorkerPackageNo. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="WorkerPackageNo", AutoGenerateField=true)]
    [Required]
    public long WorkerPackageNo {
      get { return PropertyMetadata.WorkerPackageNo.GetValue(this); }
      set { PropertyMetadata.WorkerPackageNo.SetValue(this, value); }
    }

    /// <summary>Gets or sets the WorkerSuccessful. </summary>
    [DataMember]
    [Bindable(true, BindingDirection.TwoWay)]
    [Editable(true)]
    [Display(Name="WorkerSuccessful", AutoGenerateField=true)]
    [Required]
    public bool WorkerSuccessful {
      get { return PropertyMetadata.WorkerSuccessful.GetValue(this); }
      set { PropertyMetadata.WorkerSuccessful.SetValue(this, value); }
    }

    /// <summary>Gets or sets the JobActionId. </summary>
    [DataMember]
    [Bindable(false)]
    [Editable(true)]
    [Display(Name="JobActionId", AutoGenerateField=false)]
    [Required]
    public long JobActionId {
      get { return PropertyMetadata.JobActionId.GetValue(this); }
      set { PropertyMetadata.JobActionId.SetValue(this, value); }
    }
    #endregion Data Properties

    #region Navigation properties

    /// <summary>Gets or sets the JobAction. </summary>
    [DataMember]
    [Bindable(false)]
    [Display(Name="JobAction", AutoGenerateField=false)]
    public JobAction JobAction {
      get { return PropertyMetadata.JobAction.GetValue(this); }
      set { PropertyMetadata.JobAction.SetValue(this, value); }
    }
    #endregion Navigation properties

    #region EntityProperty definitions
    public partial class PropertyMetadata {

      /// Explicit static constructor ensures static fields are initialized.
      static PropertyMetadata() {}

      /// <summary>The Id <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Log, long> Id = new IbEm.DataEntityProperty<Log, long>("Id", false, true, IbEm.ConcurrencyStrategy.None, true, null);

      /// <summary>The Date <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Log, System.DateTime> Date = new IbEm.DataEntityProperty<Log, System.DateTime>("Date", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Path <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Log, string> Path = new IbEm.DataEntityProperty<Log, string>("Path", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Info <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Log, string> Info = new IbEm.DataEntityProperty<Log, string>("Info", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Exception <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Log, string> Exception = new IbEm.DataEntityProperty<Log, string>("Exception", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Error <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Log, bool> Error = new IbEm.DataEntityProperty<Log, bool>("Error", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The Description <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Log, string> Description = new IbEm.DataEntityProperty<Log, string>("Description", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The CustomerName <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Log, string> CustomerName = new IbEm.DataEntityProperty<Log, string>("CustomerName", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The ServerName <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Log, string> ServerName = new IbEm.DataEntityProperty<Log, string>("ServerName", true, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The WorkerStartTime <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Log, System.DateTime> WorkerStartTime = new IbEm.DataEntityProperty<Log, System.DateTime>("WorkerStartTime", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The WorkerErrorCount <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Log, int> WorkerErrorCount = new IbEm.DataEntityProperty<Log, int>("WorkerErrorCount", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The WorkerPackageNo <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Log, long> WorkerPackageNo = new IbEm.DataEntityProperty<Log, long>("WorkerPackageNo", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The WorkerSuccessful <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Log, bool> WorkerSuccessful = new IbEm.DataEntityProperty<Log, bool>("WorkerSuccessful", false, false, IbEm.ConcurrencyStrategy.None, false, null);

      /// <summary>The JobActionId <see cref="T:IbEm.DataEntityProperty"/>. </summary>
      public static readonly IbEm.DataEntityProperty<Log, long> JobActionId = new IbEm.DataEntityProperty<Log, long>("JobActionId", false, false, IbEm.ConcurrencyStrategy.None, false, "JobAction");

      /// <summary>The JobAction <see cref="T:IbEm.NavigationEntityProperty"/>. </summary>
      public static readonly IbEm.NavigationScalarEntityProperty<Log, JobAction> JobAction = new IbEm.NavigationScalarEntityProperty<Log, JobAction>("JobAction", true, "FK_Log_JobAction", IbEm.QueryDirection.ToRole2);
    }
    #endregion EntityProperty definitions

    #region EntityPropertyNames
    public new partial class EntityPropertyNames : IbEm.Entity.EntityPropertyNames {
      public const String Id = "Id";
      public const String Date = "Date";
      public const String Path = "Path";
      public const String Info = "Info";
      public const String Exception = "Exception";
      public const String Error = "Error";
      public const String Description = "Description";
      public const String CustomerName = "CustomerName";
      public const String ServerName = "ServerName";
      public const String WorkerStartTime = "WorkerStartTime";
      public const String WorkerErrorCount = "WorkerErrorCount";
      public const String WorkerPackageNo = "WorkerPackageNo";
      public const String WorkerSuccessful = "WorkerSuccessful";
      public const String JobActionId = "JobActionId";
      public const String JobAction = "JobAction";
    }
    #endregion EntityPropertyNames
  }
  #endregion Log class

  #region EntityRelations

  /// <summary>
  /// A generated class that returns the relations between entities in this model.
  /// </summary>
  [IbCore.IdeaBladeGuid("89249c6e-d58b-44ab-b9e3-c45ef720774d", "2.1.4")]
  public partial class EntityRelations : IbEm.IEntityRelations {

    /// Explicit static constructor ensures static fields are initialized.
    static EntityRelations() {}

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="Cash"/> and <see cref="Customer"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_Cash_Customer = new IbEm.EntityRelation(
      typeof(Cash),
      typeof(Customer),
       new IbEm.DataEntityProperty[] { Cash.PropertyMetadata.CustomerId},
       new IbEm.DataEntityProperty[] { Customer.PropertyMetadata.Id},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_Cash_Customer");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="Customer"/> and <see cref="Server"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_Customer_Server = new IbEm.EntityRelation(
      typeof(Customer),
      typeof(Server),
       new IbEm.DataEntityProperty[] { Customer.PropertyMetadata.ServerId},
       new IbEm.DataEntityProperty[] { Server.PropertyMetadata.Id},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_Customer_Server");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="Customer"/> and <see cref="UpdateProfile"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_Customer_UpdateProfile = new IbEm.EntityRelation(
      typeof(Customer),
      typeof(UpdateProfile),
       new IbEm.DataEntityProperty[] { Customer.PropertyMetadata.UpdateProfileId},
       new IbEm.DataEntityProperty[] { UpdateProfile.PropertyMetadata.Id},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_Customer_UpdateProfile");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="ServerSetting"/> and <see cref="Server"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_ServerSettings_Server = new IbEm.EntityRelation(
      typeof(ServerSetting),
      typeof(Server),
       new IbEm.DataEntityProperty[] { ServerSetting.PropertyMetadata.ServerId},
       new IbEm.DataEntityProperty[] { Server.PropertyMetadata.Id},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_ServerSettings_Server");

    /// <summary>
    /// Represents the relationship between 
    /// <see cref="Log"/> and <see cref="JobAction"/>.
    /// </summary>
    public static IbEm.EntityRelation FK_Log_JobAction = new IbEm.EntityRelation(
      typeof(Log),
      typeof(JobAction),
       new IbEm.DataEntityProperty[] { Log.PropertyMetadata.JobActionId},
       new IbEm.DataEntityProperty[] { JobAction.PropertyMetadata.Id},
      IbEm.Multiplicity.Many,
      IbEm.Multiplicity.One,
      IbEm.OnDeleteMode.None,
      IbEm.OnDeleteMode.None,
      "FK_Log_JobAction");
  }
  #endregion EntityRelations
}
